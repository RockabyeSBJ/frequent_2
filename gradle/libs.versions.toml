[versions]
appcompat = "1.7.0"
activityCompose = "1.10.1"
agp = "8.9.2"
# ago 8.9.2 is highest but I have compose issues. Google suggested in developer.android that 8.9.0 was the highest supported
coreKtx = "1.16.0"
composeBom = "2025.04.01"
coroutines = "1.10.2"
hilt = "2.56.2"
hiltNavigation = "1.2.0"
# Navigation Compose ("navigation") is often tied to Hil Navigation, but doesn't follow the sam lib version
espressoCore = "3.7.0-alpha03"
javax = "1"
junit = "4.13.2"
junitVersion = "1.2.1"
kotlin = "2.1.20"
kotlinxSerialization = "1.8.1"
ksp = "2.1.20-1.0.32"
lifecycleRuntimeKtx = "2.9.0-rc01"
msal = "6.0.1"
navigation = "2.8.9"
okhttp3 = "5.0.0-alpha.14"
org_json = "20250107"
retrofit = "2.11.0"
room = "2.7.1"
versions = "0.52.0"
material = "1.12.0"
# material = "1.12.0"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }

## junit = { group = "junit", name = "junit", version.ref = "junit" }
## If you use the useJUnitPlatform()function in your build script, the kotlin-test library
## automatically includes JUnit 5 as a dependency. This setup enables access to all JUnit 5 APIs,
## along with the kotlin-test API, in JVM-only projects and JVM tests of Kotlin Multiplatform (KMP) projects.
## testImplementation(kotlin("test"))
## see https://kotlinlang.org/docs/jvm-test-using-junit.html#add-dependencies

androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycleRuntimeKtx" }

androidx-navigation-compose = { group="androidx.navigation", name="navigation-compose",     version.ref="navigation" }

#BOM managed
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-foundation = { group = "androidx.compose.foundation", name = "foundation" }
androidx-foundation-layout = { group = "androidx.compose.foundation", name = "foundation-layout" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-runtime = { group = "androidx.compose.runtime", name = "runtime" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
# androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
# androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }

# Not a part of the BOM becaues it provides ComponentActivity. Not related to Compose.
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }

# MSAL
microsoft-identity-client = { group = "com.microsoft.identity.client", name = "msal", version.ref = "msal" }

kotlinx-coroutines-core   = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core",   version.ref = "coroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
org-json = { group = "org.json", name = "json", version.ref = "org_json" }

javax-inject = { group = "javax.inject", name = "javax.inject", version.ref = "javax" }
okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
# okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3" }

# Required for Hilt
dagger-hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
dagger-hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
dagger-hilt-core = { group = "com.google.dagger", name = "hilt-core", version.ref = "hilt" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hiltNavigation" }
# ^^ bridges Hilt DI with Compose Navigation. Exposes helpers like hiltViewModel() in a composable nav grap.
# https://developer.android.com/training/dependency-injection/hilt-jetpack I haven't quite figured out Hilt yet
# and you probably need to clean it up to reduce bloat. Maybe navigationCompose doesn't have version dependency on Hilt
# and maybe you can call navigation-fragment to avoid calling api/ksp everywhere. <<-you were right! It doesn't!

# Retrofit
retrofit2 = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit2-moshi = { group = "com.squareup.retrofit2", name = "converter-moshi", version.ref = "retrofit" }
# Room
androidx-room-common = { group = "androidx.room", name = "room-common", version.ref = "room" }
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
# material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# ALSO - IMPORT GLIDE FOR IMAGE LOADING, NOT COIL




[plugins]
#it took a lot of heartache to get this correct
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
# NOTE: As of Kotlin 2.0 the Compose Compiler is tied to Kotlin versioning. Details here:
# https://developer.android.com/develop/ui/compose/bom   <-- asks why Compose Copmiler isn't on the Bom.
# https://developer.android.com/develop/ui/compose/compiler
# org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}
androidx-room = { id = "androidx.room", version.ref = "room" }


# meta Gradle helpders
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }